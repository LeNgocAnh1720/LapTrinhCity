/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.KhoaHocDAO;
import DAO.ThongKeDAO;
import Utilities.Auths;
import Utilities.XImages;
import java.awt.Color;
import static java.lang.Integer.sum;
import java.util.List;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import Model.KhoaHoc;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author OS
 */
public class ThongKe extends javax.swing.JFrame {

    /**
     * Creates new form ThongKe
     */
    DefaultTableModel model;

    public ThongKe() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTongHopThongKe = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        pnlNguoiHoc = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblNguoiHoc = new rojeru_san.complementos.RSTableMetro();
        btnBieuDo = new rojeru_san.complementos.RSButtonHover();
        pnlBangDiem = new javax.swing.JPanel();
        lblKhoaHoc = new javax.swing.JLabel();
        cboKhoaHoc = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBangDiem = new rojeru_san.complementos.RSTableMetro();
        pnlTongHopDiem = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTongHopDiem = new rojeru_san.complementos.RSTableMetro();
        btnDiemChuyenDe = new rojeru_san.complementos.RSButtonHover();
        pnlDoanhThu = new javax.swing.JPanel();
        lblNam = new javax.swing.JLabel();
        cboNam = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDoanhThu = new rojeru_san.complementos.RSTableMetro();
        btnDoanhThu = new rojeru_san.complementos.RSButtonHover();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("EduSys - TỔNG HỢP THỐNG KÊ");

        lblTongHopThongKe.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblTongHopThongKe.setForeground(new java.awt.Color(0, 112, 192));
        lblTongHopThongKe.setText("TỔNG HỢP THỐNG KÊ");

        tblNguoiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "NĂM", "SỐ LƯỢNG NGƯỜI HỌC", "ĐK ĐẦU TIÊN", "ĐK CUỐI CÙNG"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNguoiHoc.setAltoHead(38);
        tblNguoiHoc.setColorBackgoundHead(new java.awt.Color(153, 153, 192));
        tblNguoiHoc.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        tblNguoiHoc.setColorSelBackgound(new java.awt.Color(255, 51, 51));
        tblNguoiHoc.setFuenteHead(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblNguoiHoc.setRowHeight(25);
        jScrollPane5.setViewportView(tblNguoiHoc);

        btnBieuDo.setText("THỐNG KÊ");
        btnBieuDo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBieuDoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlNguoiHocLayout = new javax.swing.GroupLayout(pnlNguoiHoc);
        pnlNguoiHoc.setLayout(pnlNguoiHocLayout);
        pnlNguoiHocLayout.setHorizontalGroup(
            pnlNguoiHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
            .addGroup(pnlNguoiHocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBieuDo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlNguoiHocLayout.setVerticalGroup(
            pnlNguoiHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNguoiHocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBieuDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabs.addTab("NGƯỜI HỌC", pnlNguoiHoc);

        pnlBangDiem.setForeground(new java.awt.Color(0, 112, 192));
        pnlBangDiem.setToolTipText("");

        lblKhoaHoc.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblKhoaHoc.setForeground(new java.awt.Color(0, 112, 192));
        lblKhoaHoc.setText("KHOÁ HỌC: ");

        cboKhoaHoc.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cboKhoaHoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboKhoaHocItemStateChanged(evt);
            }
        });

        tblBangDiem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MÃ NGƯỜI HỌC", "HỌ TÊN", "ĐIỂM", "XẾP LOẠI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBangDiem.setAltoHead(38);
        tblBangDiem.setColorBackgoundHead(new java.awt.Color(153, 153, 192));
        tblBangDiem.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        tblBangDiem.setColorSelBackgound(new java.awt.Color(255, 51, 51));
        tblBangDiem.setFuenteHead(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblBangDiem.setRowHeight(25);
        jScrollPane1.setViewportView(tblBangDiem);

        javax.swing.GroupLayout pnlBangDiemLayout = new javax.swing.GroupLayout(pnlBangDiem);
        pnlBangDiem.setLayout(pnlBangDiemLayout);
        pnlBangDiemLayout.setHorizontalGroup(
            pnlBangDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBangDiemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBangDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBangDiemLayout.createSequentialGroup()
                        .addComponent(lblKhoaHoc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboKhoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 63, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        pnlBangDiemLayout.setVerticalGroup(
            pnlBangDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBangDiemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBangDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKhoaHoc)
                    .addComponent(cboKhoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("BẢNG ĐIỂM", pnlBangDiem);

        tblTongHopDiem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "CHUYÊN ĐỀ", "SL HỌC VIÊN", "ĐIỂM THẤP NHẤT", "ĐIỂM CAO NHẤT", "ĐIỂM TB"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTongHopDiem.setAltoHead(38);
        tblTongHopDiem.setColorBackgoundHead(new java.awt.Color(153, 153, 192));
        tblTongHopDiem.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        tblTongHopDiem.setColorSelBackgound(new java.awt.Color(255, 51, 51));
        tblTongHopDiem.setFuenteHead(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblTongHopDiem.setRowHeight(25);
        jScrollPane2.setViewportView(tblTongHopDiem);
        if (tblTongHopDiem.getColumnModel().getColumnCount() > 0) {
            tblTongHopDiem.getColumnModel().getColumn(1).setMinWidth(115);
            tblTongHopDiem.getColumnModel().getColumn(1).setPreferredWidth(115);
            tblTongHopDiem.getColumnModel().getColumn(1).setMaxWidth(115);
            tblTongHopDiem.getColumnModel().getColumn(2).setMinWidth(130);
            tblTongHopDiem.getColumnModel().getColumn(2).setPreferredWidth(130);
            tblTongHopDiem.getColumnModel().getColumn(2).setMaxWidth(130);
            tblTongHopDiem.getColumnModel().getColumn(3).setMinWidth(130);
            tblTongHopDiem.getColumnModel().getColumn(3).setPreferredWidth(130);
            tblTongHopDiem.getColumnModel().getColumn(3).setMaxWidth(130);
            tblTongHopDiem.getColumnModel().getColumn(4).setMinWidth(115);
            tblTongHopDiem.getColumnModel().getColumn(4).setPreferredWidth(115);
            tblTongHopDiem.getColumnModel().getColumn(4).setMaxWidth(115);
        }

        btnDiemChuyenDe.setText("THỐNG KÊ");
        btnDiemChuyenDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiemChuyenDeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTongHopDiemLayout = new javax.swing.GroupLayout(pnlTongHopDiem);
        pnlTongHopDiem.setLayout(pnlTongHopDiemLayout);
        pnlTongHopDiemLayout.setHorizontalGroup(
            pnlTongHopDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
            .addGroup(pnlTongHopDiemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDiemChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTongHopDiemLayout.setVerticalGroup(
            pnlTongHopDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTongHopDiemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDiemChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("ĐIỂM CHUYÊN ĐỀ", pnlTongHopDiem);

        lblNam.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblNam.setForeground(new java.awt.Color(0, 112, 192));
        lblNam.setText("NĂM: ");

        cboNam.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cboNam.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboNamItemStateChanged(evt);
            }
        });

        tblDoanhThu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "CHUYÊN ĐỀ", "Số KH", "Số HV", "D.Thu", "HP.TN", "HP.CN", "HP.TB"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDoanhThu.setAltoHead(38);
        tblDoanhThu.setColorBackgoundHead(new java.awt.Color(153, 153, 192));
        tblDoanhThu.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        tblDoanhThu.setColorSelBackgound(new java.awt.Color(255, 51, 51));
        tblDoanhThu.setFuenteHead(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        tblDoanhThu.setRowHeight(25);
        jScrollPane3.setViewportView(tblDoanhThu);
        if (tblDoanhThu.getColumnModel().getColumnCount() > 0) {
            tblDoanhThu.getColumnModel().getColumn(0).setMinWidth(230);
            tblDoanhThu.getColumnModel().getColumn(0).setPreferredWidth(230);
            tblDoanhThu.getColumnModel().getColumn(0).setMaxWidth(230);
        }

        btnDoanhThu.setText("THỐNG KÊ");
        btnDoanhThu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoanhThuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDoanhThuLayout = new javax.swing.GroupLayout(pnlDoanhThu);
        pnlDoanhThu.setLayout(pnlDoanhThuLayout);
        pnlDoanhThuLayout.setHorizontalGroup(
            pnlDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(pnlDoanhThuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlDoanhThuLayout.createSequentialGroup()
                        .addComponent(lblNam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        pnlDoanhThuLayout.setVerticalGroup(
            pnlDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDoanhThuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNam)
                    .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("DOANH THU", pnlDoanhThu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabs)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTongHopThongKe)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTongHopThongKe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabs)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboKhoaHocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboKhoaHocItemStateChanged
        this.tableBangDiem();
    }//GEN-LAST:event_cboKhoaHocItemStateChanged

    private void cboNamItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboNamItemStateChanged
        this.tableDoanhThu();
    }//GEN-LAST:event_cboNamItemStateChanged

    private void btnBieuDoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBieuDoActionPerformed
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        int tong = tblNguoiHoc.getRowCount();
//        for(int i: tblNguoiHoc.getSelectedRows()){
//            int sl = (int) tblNguoiHoc.getValueAt(i, 1);
//            int nam = (int) tblNguoiHoc.getValueAt(i, 0);
//            dataset.setValue(sl,"SL NGƯỜI HỌC",String.valueOf(nam));
//        }
        for (int i = 0; i < tong; i++) {
            int sl = (int) tblNguoiHoc.getValueAt(i, 1);
            int nam = (int) tblNguoiHoc.getValueAt(i, 0);
            dataset.setValue(sl, "SL NGƯỜI HỌC", String.valueOf(nam));
        }
//        dataset.setValue(80, "Marrks", "Students1");
//        dataset.setValue(90, "Marrks", "Students2");
//        dataset.setValue(70, "Marrks", "Students3");
//        dataset.setValue(85, "Marrks", "Students4");
//        dataset.setValue(40, "Marrks", "Students5");

        JFreeChart chart = ChartFactory.createBarChart("THỐNG KÊ SỐ LƯỢNG NGƯỜI HỌC", "NĂM", "SL NGƯỜI HỌC", dataset, PlotOrientation.VERTICAL, true, true, false);

        CategoryPlot plot = chart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.BLACK);

        ChartFrame frame = new ChartFrame("Thống Kê Số Lượng Người Học Theo Năm", chart, true);
        frame.setVisible(true);
        frame.setSize(750, 500);
        frame.setLocationRelativeTo(null);
        frame.setIconImage(XImages.getAppIcon());
    }//GEN-LAST:event_btnBieuDoActionPerformed

    private void btnDiemChuyenDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiemChuyenDeActionPerformed
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        //dataset.addValue(10, "USA", "2005");
//        dataset.addValue(15, "India", "2005");
//        dataset.addValue(20, "China", "2005");
//
//        // Population in 2010  
//        dataset.addValue(15, "USA", "2010");
//        dataset.addValue(20, "India", "2010");
//        dataset.addValue(25, "China", "2010");
//
//        // Population in 2015  
//        dataset.addValue(20, "USA", "2015");
//        dataset.addValue(25, "India", "2015");
//        dataset.addValue(30, "China", "2015");
        int tong = tblTongHopDiem.getRowCount();
        JFreeChart chart = null;
        for (int i = 0; i < tong; i++) {
            double thapnhat = (double) tblTongHopDiem.getValueAt(i, 2);
            double caonhat = (double) tblTongHopDiem.getValueAt(i, 3);
            double trungbinh = (double) tblTongHopDiem.getValueAt(i, 4);
            String cd = tblTongHopDiem.getValueAt(i, 0).toString();

            dataset.setValue(thapnhat, "Điểm Thấp Nhất", cd);
            dataset.setValue(caonhat, "Điểm Cao Nhất", cd);
            dataset.setValue(trungbinh, "Điểm Trung Bình", cd);
            chart = ChartFactory.createBarChart("THỐNG KÊ ĐIỂM CHUYÊN ĐỀ", "CHUYÊN ĐỀ", "ĐIỂM", dataset, PlotOrientation.VERTICAL, true, true, false);
            CategoryPlot plot = chart.getCategoryPlot();
            plot.setRangeGridlinePaint(Color.BLACK);
        }
        ChartFrame frame = new ChartFrame("THỐNG KÊ ĐIỂM TỪNG CHUYÊN ĐỀ", chart, true);
        frame.setVisible(true);
        frame.setSize(750, 500);
        frame.setLocationRelativeTo(null);
        frame.setIconImage(XImages.getAppIcon());
    }//GEN-LAST:event_btnDiemChuyenDeActionPerformed

    private void btnDoanhThuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoanhThuActionPerformed

    }//GEN-LAST:event_btnDoanhThuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongKe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.complementos.RSButtonHover btnBieuDo;
    private rojeru_san.complementos.RSButtonHover btnDiemChuyenDe;
    private rojeru_san.complementos.RSButtonHover btnDoanhThu;
    private javax.swing.JComboBox<String> cboKhoaHoc;
    private javax.swing.JComboBox<String> cboNam;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblKhoaHoc;
    private javax.swing.JLabel lblNam;
    private javax.swing.JLabel lblTongHopThongKe;
    private javax.swing.JPanel pnlBangDiem;
    private javax.swing.JPanel pnlDoanhThu;
    private javax.swing.JPanel pnlNguoiHoc;
    private javax.swing.JPanel pnlTongHopDiem;
    private javax.swing.JTabbedPane tabs;
    private rojeru_san.complementos.RSTableMetro tblBangDiem;
    private rojeru_san.complementos.RSTableMetro tblDoanhThu;
    private rojeru_san.complementos.RSTableMetro tblNguoiHoc;
    private rojeru_san.complementos.RSTableMetro tblTongHopDiem;
    // End of variables declaration//GEN-END:variables

    ThongKeDAO tkdao = new ThongKeDAO();
    KhoaHocDAO khdao = new KhoaHocDAO();

    private void init() {
        this.setLocationRelativeTo(null);
        this.setIconImage(XImages.getAppIcon());
        fillCBOKhoaHoc();
        tableBangDiem();

        tableNguoiHoc();

        tableDiemChuyenDe();

        fillCBoNam();
        tableDoanhThu();
        this.selectTab(0);
//        if(!Auths.isManager()){
//            tabs.remove(3);
//            //Nếu không phải trưởng phòng thì xoá doanh thu
//        }
    }

    public void selectTab(int index) {
        tabs.setSelectedIndex(index);
    }

    private void fillCBOKhoaHoc() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboKhoaHoc.getModel();
        model.removeAllElements();
        List<KhoaHoc> list = khdao.SelectAll();
        for (KhoaHoc khoaHoc : list) {
            model.addElement(khoaHoc);
        }
    }

    private String XepLoai(double diem) {
        if (diem < 5) {
            return "Chưa Đạt";
        } else if (diem < 6.5) {
            return "Trung Bình";
        } else if (diem < 7.5) {
            return "Khá";
        } else if (diem < 9) {
            return "Giỏi";
        }
        return "Xuất Sắc";
    }

    private void tableBangDiem() {
        DefaultTableModel model = (DefaultTableModel) tblBangDiem.getModel();
        model.setRowCount(0);
        KhoaHoc kh = (KhoaHoc) cboKhoaHoc.getSelectedItem();
        List<Object[]> list = tkdao.getBangDiem(kh.getMaKH());
        for (Object[] obj : list) {
            double diem = (double) obj[2];
            model.addRow(new Object[]{
                obj[0], obj[1], diem, XepLoai(diem)
            });
        }
    }

    private void tableNguoiHoc() {
        DefaultTableModel model = (DefaultTableModel) tblNguoiHoc.getModel();
        model.setRowCount(0);
        List<Object[]> list = tkdao.getSoLuongNguoiHoc();
        for (Object[] nh : list) {
            model.addRow(nh);
        }
    }

    private void tableDiemChuyenDe() {
        DefaultTableModel model = (DefaultTableModel) tblTongHopDiem.getModel();
        model.setRowCount(0);
        List<Object[]> list = tkdao.getDiemChuyenDe();
        for (Object[] objects : list) {
            model.addRow(new Object[]{
                objects[0], objects[1], objects[2], objects[3], objects[4]
            });
        }
    }

    private void fillCBoNam() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNam.getModel();
        model.removeAllElements();
        List<Integer> list = khdao.selectYear();
        for (Integer year : list) {
            model.addElement(year);
        }
    }

    private void tableDoanhThu() {
        DefaultTableModel model = (DefaultTableModel) tblDoanhThu.getModel();
        model.setRowCount(0);
        int nam = (Integer) cboNam.getSelectedItem();
        List<Object[]> list = tkdao.getDoanhThu(nam);
        for (Object[] row : list) {
            model.addRow(row);
        }
    }
}
